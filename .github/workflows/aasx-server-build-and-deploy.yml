name: Build-and-package-release-workflow

on:
  push:
    branches:
      - main

jobs:
  Build-and-package:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master

      - name: Install .NET core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Build for the release
        working-directory: SOURCE/Server/aasx-server/src
        run: powershell .\BuildForRelease.ps1

      - name: Package the release
        working-directory: SOURCE/Server/aasx-server/src
        run: |
          Write-Host "Packaging for the Deploy version"
          powershell .\PackageRelease.ps1

      - name: Cache Build AASX Server
        uses: actions/cache@v3
        with:
          path: 'SOURCE/Server/aasx-server/artefacts/release/'
          key: aasxServerBuild-${{ github.sha }}
          enableCrossOsArchive: true

  upload-AASX-Server:
    needs: Build-and-package
    runs-on: ubuntu-latest
    steps:
      - name: restore Cache
        uses: actions/cache/restore@v3
        with:
          key: aasxServerBuild-${{ github.sha }}
          path: 'SOURCE/Server/aasx-server/artefacts/release/'

      - name: stop and cleanup old aasx server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          script: ./preRun.sh

      - name: upload file
        uses: wangyucode/sftp-upload-action@v2.0.2
        with:
          username: ${{ secrets.FTP_USERNAME }}
          host: ${{ secrets.FTP_SERVER }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          localDir: 'SOURCE/Server/aasx-server/artefacts/release'
          remoteDir: '/home/jonas/Server'
          forceUpload: true

      - name: extract and start aasx server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          script: nohup ./run.sh > nohup.out 2> nohup.err < /dev/null &
